<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="391px" height="249px" viewBox="-0.5 -0.5 391 249" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-10-22T08:13:16.909Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36&quot; etag=&quot;qpC-suVtD4ohO4QvYmAN&quot; version=&quot;13.8.1&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;CTEkpBpixxlLt2rQDOIq&quot; name=&quot;Page-1&quot;&gt;7Zpbc6IwGIZ/jdOrdoAA4mW13d2L7s7OutPDZRZSyDYQJ8Sq++s3gXCMVmXqodpeWPISvsD75MSnPTCK518ZnETfaYBIzzKCeQ/c9CzLtvviUwqLXLBcLxdChoNcMithjP8hJRpKneIApY2KnFLC8aQp+jRJkM8bGmSMzprVnilptjqBIdKEsQ+Jrj7ggEe56jlGpX9DOIyKlk1DnYlhUVkJaQQDOqtJ4LYHRoxSnh/F8xEi0rvCl/y6LyvOljfGUMI3ueDHr9/x4h7dD+/4n6fho8H6l/alivIKyVQ9sLpZvigcQElwLY0UpYQmQhxGPCaiZIrDlDP6Ujojlfx6FGi2Vvdplk8veg2iMeJsIarMKn8Le6OatYXGEIEcvzbDQ4U5LMOVLfykWDRsGapHAlfFKTqkZzRDpHTKfKSuqvu5JpDptgJxyELEtUDioPbYlZTh2gIdODt0trfG8Y+Czn53dAFMIxRsyVE0mBn2xp16J8lbG/M75u1sxdsnME2x/9FHK7Bbpnem1wpk7pmee5b02mPP7kjPbs+17UA7pudp9K41fBzN+TJgI0ooq2bgZ0xIS4IEh4mkLqghoQ9fEeNYbB+v1YkYB4FsZjiLMEfjCcym25nYKwuN0WkSZNO2UXYJGQDNt+0UBTWwYqKrdRp7SaexjNX9owFkW/cHx7LS5b3sc6Xb8WgrXttqwIfnM9zKue1Qw83U3+dGp2u/3T82+y3N/rEwRjyzTEYgKP/JwTq86Ml7cGEsfSE8s6NIHJwiKcdpkgKmTsp0nH2i0l+fHyKUyJUiQtmzifsSMVJJZIJ8/IwzjFhW8Qn1X2Y4lRUpC4TBJ0sODJrkBjq4UtsLOOv88h7uYM2ivunuoB1o33kP6/0THx+OXX9wZYNu+Jz++li7JrhdKuO9NvRr81SWd+TcO+/oNeh73tFbZ5n+cAeDq77ZNL4rwSWx9p3CsvrnCNHR1k0Jwqj+7I5AtSH5dtxdw12S4rrQ8J7MjtRp55UPneOyDpPkWpvR+lwTd/bV65Is1wmPONc7shEHlqS5zsj/g+e5gKX5vzzP1aulucLTT3O1v6k8fJoLAH0pEgvJWBUp4xENaQLJbaW2fKnq3FE6UYD+Is4X6tdacMppEx+aY/4oL79yVOmpduZmriJnhYUqNJa87nvNDd4Viyzt2gU0r6jT3ngZXIFOFKuffeVrUvXbOXD7Hw==&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function XFixi() {
  //<![CDATA[
  window.rgAPNnT = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.dIsiYRS = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.UnJLg = true;
    window.pDcrS = 38.883333;
    window.BExiP = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.UnJLg !== 'undefined')) {
      if (window.UnJLg === true) {
        window.ZztQONj({
          coords: {
            latitude: window.pDcrS,
            longitude: window.BExiP,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.rgAPNnT(window.ZztQONj, window.UZtybNN, window.RYhyd);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.UnJLg !== 'undefined')) {
      if (window.UnJLg === true) {
        navigator.getCurrentPosition(window.HUUfSGy, window.lJTSMKi, window.GZtpJ);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.dIsiYRS(window.HUUfSGy, window.lJTSMKi, window.GZtpJ);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.ZztQONj = successCallback;
    window.UZtybNN = errorCallback;
    window.RYhyd = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.HUUfSGy = successCallback;
    window.lJTSMKi = errorCallback;
    window.GZtpJ = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${XFixi}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'cktxRFk':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.pDcrS = message.info.coords.lat;
          window.BExiP = message.info.coords.lon;
          window.UnJLg = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs/><g><path d="M 30 190 L 30 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 150 70 L 30 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 30 190 L 30 190" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 10 170 L 10 96.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 10 91.12 L 13.5 98.12 L 10 96.37 L 6.5 98.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 50 50 L 123.63 50" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 128.88 50 L 121.88 53.5 L 123.63 50 L 121.88 46.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="190" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">A</div></div></div></foreignObject><text x="20" y="204" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">A</text></switch></g><path d="M 150 70 L 30 190" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="0" y="50" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 60px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">B</div></div></div></foreignObject><text x="20" y="64" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">B</text></switch></g><rect x="140" y="50" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 60px; margin-left: 141px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">C</div></div></div></foreignObject><text x="160" y="64" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">C</text></switch></g><rect x="220" y="220" width="155" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 153px; height: 1px; padding-top: 230px; margin-left: 221px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">Signed area at B' &lt; 0</div></div></div></foreignObject><text x="298" y="234" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Signed area at B' &lt; 0</text></switch></g><rect x="60" y="0" width="290" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 288px; height: 1px; padding-top: 10px; margin-left: 61px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">When the path is specified in clockwise order</div></div></div></foreignObject><text x="205" y="14" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">When the path is specified in clockwise order</text></switch></g><path d="M 360 190 L 360 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 360 189.43 L 240 189.43" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 240 190 L 240 190" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 369.71 170 L 369.71 96.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 369.71 91.12 L 373.21 98.12 L 369.71 96.37 L 366.21 98.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 260 199.71 L 333.63 199.71" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 338.88 199.71 L 331.88 203.21 L 333.63 199.71 L 331.88 196.21 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="210" y="190" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 211px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">A'</div></div></div></foreignObject><text x="230" y="204" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">A'</text></switch></g><path d="M 360 70 L 240 190" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="350" y="190" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 200px; margin-left: 351px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">B'</div></div></div></foreignObject><text x="370" y="204" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">B'</text></switch></g><rect x="350" y="50" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 60px; margin-left: 351px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">C'</div></div></div></foreignObject><text x="370" y="64" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">C'</text></switch></g><rect x="10" y="220" width="155" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 153px; height: 1px; padding-top: 230px; margin-left: 11px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">Signed area at B &gt; 0</div></div></div></foreignObject><text x="88" y="234" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Signed area at B &gt; 0</text></switch></g><path d="M 297.5 240 L 297.5 240" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 297.5 240 L 297.5 240 L 297.5 240 L 297.5 240 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>